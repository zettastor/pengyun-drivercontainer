<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2012, University of Konstanz, Distributed Systems Group
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:
        * Redistributions of source code must retain the above copyright
          notice, this list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above copyright
          notice, this list of conditions and the following disclaimer in the
          documentation and/or other materials provided with the distribution.
        * Neither the name of the University of Konstanz nor the
          names of its contributors may be used to endorse or promote products
          derived from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
    DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
  targetNamespace="http://www.jscsi.org/2010-04" xmlns="http://www.jscsi.org/2010-04">
  <!-- Type for target name fitting the iSCSI naming reference. -->
  <xs:complexType name="CreateType">
    <xs:attribute default="0.5" name="size" type="xs:double"/>
  </xs:complexType>

  <!-- Type for port. -->
  <xs:complexType name="FileStorageType">
    <xs:sequence>
      <!-- Storage where the data of the target should be stored to. -->
      <xs:choice>
        <xs:element name="DontCreate"/>
        <xs:element name="Create" type="CreateType"/>
      </xs:choice>
      <!-- Should a new storage created or not. -->
      <xs:element default="storage.dat" maxOccurs="1" minOccurs="1"
        name="Path" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Type for creating a storage, including a length of the fresh storage. -->
  <xs:complexType name="TargetList">
    <xs:sequence maxOccurs="unbounded" minOccurs="1">
      <xs:element name="Target"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Type for file storage. -->
  <xs:complexType name="GlobalConfig">
    <xs:sequence>
      <xs:element default="false" maxOccurs="1"
        minOccurs="0" name="AllowSloppyNegotiation" type="xs:boolean"/>
      <xs:element default="3260" maxOccurs="1"
        minOccurs="0" name="Port" type="TargetPortType"/>
    </xs:sequence>
  </xs:complexType>

  <!--Over all configuration including targets and a global config. -->
  <xs:complexType name="Target">
    <xs:sequence>
      <xs:choice>
        <xs:element name="SyncFileStorage" type="FileStorageType"/>
        <xs:element name="AsyncFileStorage" type="FileStorageType"/>
      </xs:choice>
      <xs:element maxOccurs="1" minOccurs="0"
        name="TargetAlias" type="xs:string"/>
      <xs:element maxOccurs="1" minOccurs="1"
        name="TargetName" type="TargetNameType"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Just the target list. -->
  <xs:element name="configuration">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="1" minOccurs="1"
          name="TargetList" type="TargetList"/>
        <xs:element maxOccurs="1" minOccurs="1"
          name="GlobalConfig" type="GlobalConfig"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- Type for the global config. Note that most settings are part of
      the negotiation and thereby not set over here. -->
  <xs:simpleType name="TargetNameType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="100"/>
      <xs:pattern
        value="iqn\.[0-9]{4}-[0-9]{2}\.([a-z0-9\-])+(\.([a-z0-9\-])+)*\:([a-z0-9\-])+(\.([a-z0-9\-])+)*"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Single targets. -->
  <xs:simpleType name="TargetPortType">
    <xs:restriction base="xs:positiveInteger">
      <xs:maxInclusive value="65536"/>
      <xs:minInclusive value="1"/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>